3. Queue pizza    file name: Main.java

package prac;
import java.util.Scanner;

class PizzaParlour {
    // Circular Queue implementation
    private String[] queue;
    private int front, rear, size, capacity;

    // Constructor to initialize the queue
    public PizzaParlour(int capacity) {
        this.capacity = capacity;
        this.queue = new String[capacity];
        this.front = this.rear = -1;
        this.size = 0;
    }

    // Method to check if the queue is full
    public boolean isFull() {
        return size == capacity;
    }

    // Method to check if the queue is empty
    public boolean isEmpty() {
        return size == 0;
    }

    // Method to add an order to the queue (enqueue)
    public void addOrder(String order) {
        if (isFull()) {
            System.out.println("Queue is full. Cannot accept new orders.");
        } else {
            if (front == -1) {
                front = 0;  // First order
            }
            rear = (rear + 1) % capacity;  // Circular increment
            queue[rear] = order;
            size++;
            System.out.println("Order placed: " + order);
        }
    }

    // Method to serve an order from the queue (dequeue)
    public void serveOrder() {
        if (isEmpty()) {
            System.out.println("No orders to serve.");
        } else {
            System.out.println("Serving order: " + queue[front]);
            front = (front + 1) % capacity;  // Circular increment
            size--;
        }
    }

    // Method to display the current orders in the queue
    public void displayOrders() {
        if (isEmpty()) {
            System.out.println("No orders in the queue.");
        } else {
            System.out.println("Current orders in the queue:");
            int i = front;
            for (int j = 0; j < size; j++) {
                System.out.println(queue[i]);
                i = (i + 1) % capacity;  // Circular increment
            }
        }
    }
}

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter the maximum number of orders the pizza parlour can accept: ");
        int maxOrders = scanner.nextInt();
        scanner.nextLine(); // To consume the newline character after the number input

        PizzaParlour parlour = new PizzaParlour(maxOrders);

        while (true) {
            System.out.println("\nPizza Parlour Menu:");
            System.out.println("1. Place Order");
            System.out.println("2. Serve Order");
            System.out.println("3. View Orders");
            System.out.println("4. Exit");

            System.out.print("Enter your choice: ");
            int choice = scanner.nextInt();
            scanner.nextLine();  // To consume the newline character

            switch (choice) {
                case 1:
                    if (!parlour.isFull()) {
                        System.out.print("Enter the order details: ");
                        String order = scanner.nextLine();
                        parlour.addOrder(order);
                    } else {
                        System.out.println("Sorry, the pizza parlour is full. No more orders can be accepted.");
                    }
                    break;
                case 2:
                    parlour.serveOrder();
                    break;
                case 3:
                    parlour.displayOrders();
                    break;
                case 4:
                    System.out.println("Exiting the program.");
                    scanner.close();
                    return;
                default:
                    System.out.println("Invalid choice. Please try again.");
            }
        }
    }
}

