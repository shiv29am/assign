1. Implementation of Stack     filename: Main.java
 


package prac;

import java.util.Scanner;

class Stack {
    class Node {
        int data;
        Node next;

        Node(int data) {
            this.data = data;
            this.next = null;
        }
    }

    private Node top;

    Stack() {
        this.top = null;
    }

    boolean isEmpty() {
        return top == null;
    }

    void push(int data) {
        Node newNode = new Node(data);
        newNode.next = top;
        top = newNode;
        System.out.println(data + " pushed onto the stack.");
    }

    int pop() {
        if (isEmpty()) {
            System.out.println("The stack is empty. Cannot pop element.");
            return -1;
        }
        int poppedData = top.data;
        top = top.next;
        System.out.println("Popped element: " + poppedData);
        return poppedData;
    }

    int peek() {
        if (isEmpty()) {
            System.out.println("The stack is empty.");
            return -1;
        }
        return top.data;
    }

    void display() {
        if (isEmpty()) {
            System.out.println("The stack is empty.");
        } else {
            System.out.println("Stack elements (top to bottom):");
            Node temp = top;
            while (temp != null) {
                System.out.println(temp.data);
                temp = temp.next;
            }
        }
    }
}

public class Main {
    public static void main(String[] args) {
        Stack stack = new Stack();
        Scanner scanner = new Scanner(System.in);
        int choice;

        do {
            System.out.println("\n--- Menu ---");
            System.out.println("1. Push element");
            System.out.println("2. Pop element");
            System.out.println("3. Peek element");
            System.out.println("4. Display stack");
            System.out.println("5. Exit");
            System.out.print("Enter your choice: ");
            choice = scanner.nextInt();

            switch (choice) {
                case 1 -> {
                    System.out.print("Enter the data to push: ");
                    int data = scanner.nextInt();
                    stack.push(data);
                }
                case 2 -> stack.pop();
                case 3 -> {
                    int topElement = stack.peek();
                    if (topElement != -1) {
                        System.out.println("The topmost element in the stack is: " + topElement);
                    }
                }
                case 4 -> stack.display();
                case 5 -> System.out.println("Exiting program.");
                default -> System.out.println("Invalid choice. Please try again.");
            }
        } while (choice != 5);

        scanner.close();
    }
}

